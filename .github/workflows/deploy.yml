name: CI/CD Pipeline for 2048 Game

on:
  push:
    branches:
      - master  # Trigger on push to master branch
  pull_request:
    branches:
      - master  # Trigger on PRs to master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/2048-game:$GITHUB_SHA .

      # Step 4: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/2048-game:$GITHUB_SHA

      # Step 5: Scan Docker image with Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/2048-game:$GITHUB_SHA
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

      # Step 6: Configure AWS credentials for EKS
      - name: Configure AWS credentials for EKS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 7: Update kubeconfig for EKS cluster
      - name: Update kubeconfig for EKS cluster
        run: aws eks update-kubeconfig --name serverless-game-cluster --region us-east-1

      # Step 8: Replace image tag in the deployment manifest
      - name: Update deployment image tag
        run: |
          sed -i "s|victorwasonga/2048-game:{{IMAGE_TAG}}|${{ secrets.DOCKER_USERNAME }}/2048-game:${{ github.sha }}|g" k8s/deployment.yaml

      # Step 9: Deploy updated Deployment to EKS
      - name: Deploy updated Deployment to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
